# Validate required variables are set
- name: Validate Azure token authentication variables
  when: ocp4_workload_ols_get_token | bool
  ansible.builtin.assert:
    that:
      - ocp4_workload_ols_azure_tenant_id is defined
      - ocp4_workload_ols_azure_tenant_id != "changeme"
      - ocp4_workload_ols_main_client_id is defined
      - ocp4_workload_ols_main_client_id != "changeme"
      - ocp4_workload_ols_main_client_secret is defined
      - ocp4_workload_ols_main_client_secret != "changeme"
      - ocp4_workload_ols_azure_group_id is defined
      - ocp4_workload_ols_azure_group_id != "changeme"
      - ocp4_workload_ols_child_app_display_name is defined
      - guid is defined
    fail_msg: "Azure token authentication is enabled but required variables are not properly configured. Please check defaults/main.yaml"

- name: Validate API key authentication variables
  when: not ocp4_workload_ols_get_token | bool
  ansible.builtin.assert:
    that:
      - ocp4_workload_ols_api_token is defined
      - ocp4_workload_ols_api_token != "changeme"
      - ocp4_workload_ols_api_token | length > 0
    fail_msg: "API key authentication is enabled but ocp4_workload_ols_api_token is not properly configured. Please check defaults/main.yaml"

- name: Validate AI platform is supported
  when: ocp4_workload_ai_platform is defined
  ansible.builtin.assert:
    that:
      - ocp4_workload_ai_platform in ['azure', 'openai', 'watson', 'openshiftai']
    fail_msg: "ocp4_workload_ai_platform must be one of: azure, openai, watson, openshiftai"

# Ensure that the openshift-lightspeed namespace is always created
- name: Ensure openshift-lightspeed namespace exists
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: openshift-lightspeed
    state: present

# Install the OLS Operator
- name: Install OLS Operator
  when: ocp4_workload_ols_install_operator | bool
  ansible.builtin.include_tasks: install_ols_operator.yaml

# Configure OLS
- name: Configure OLS
  block:
    # Setup Azure AI Cognitive Services (Token-based authentication)
    - name: Setup Azure AI Cognitive Services
      when: ocp4_workload_ols_get_token | bool
      include_tasks: setup_azure_token.yaml

    # Create authentication secrets based on auth type
    - name: Create authentication secret
      kubernetes.core.k8s:
        template: "{{ _secret_template }}"
        wait: true
        wait_timeout: 300
      vars:
        _secret_template: >-
          {{ 'create_secret_token.yaml.j2' if ocp4_workload_ols_get_token
             else 'create_secret.yaml.j2' }}

    - name: Create Azure App Service Principal Secret
      when: ocp4_workload_ols_get_token | bool
      kubernetes.core.k8s:
        template: create_azure_api_token.yaml.j2
        wait: true
        wait_timeout: 300

    # Create OLSConfig based on auth type
    - name: Create OLSConfig
      when: ocp4_workload_ai_platform is defined
      kubernetes.core.k8s:
        template: "{{ _olsconfig_template }}"
        wait: true
        wait_timeout: 300
      vars:
        _olsconfig_template: >-
          {{ 'install_azure_app_sp_olsconfig.yaml.j2' if ocp4_workload_ols_get_token
             else 'install_' + ocp4_workload_ai_platform + '_olsconfig.yaml.j2' }}

# Create broken pod for demo/testing purposes
- name: Create broken pod for demo
  when: ocp4_workload_ols_create_broken_pod | default(false)
  kubernetes.core.k8s:
    template: deploy_faulty_pod.yaml.j2

# Leave this as the last task in the playbook.
- name: workload tasks complete
  ansible.builtin.debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
